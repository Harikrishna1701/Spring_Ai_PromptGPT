{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vamsh\\\\OneDrive\\\\Documents\\\\New folder\\\\prompt-box-frontend\\\\src\\\\components\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayedResponse, setDisplayedResponse] = useState('');\n  const [isPaused, setIsPaused] = useState(false); // State for pause functionality\n  const [intervalId, setIntervalId] = useState(null); // State to store the interval ID\n\n  const handlePromptChange = e => {\n    setPrompt(e.target.value);\n  };\n  const handleSendPrompt = async () => {\n    if (!prompt.trim()) return;\n    setLoading(true);\n    setResponse('');\n    setDisplayedResponse('');\n    setIsPaused(false); // Reset pause state when a new prompt is sent\n\n    try {\n      const result = await axios.post('http://localhost:9191/openai/chat', {\n        prompt\n      },\n      // ✅ send as JSON\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Log the raw response to inspect it before processing\n      console.log(\"Raw AI Response:\", result.data);\n      const data = typeof result.data === \"string\" ? JSON.parse(result.data) : result.data;\n      const aiMessage = data.choices[0].message.content;\n\n      // Clean up the response (remove unnecessary newlines)\n      const cleanedResponse = aiMessage.trim().replace(/\\n+/g, ' ').replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>'); // Handle newlines and bold text\n\n      console.log(\"Cleaned AI Response:\", cleanedResponse); // Check after cleaning\n\n      setResponse(cleanedResponse);\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n      setResponse(\"Error: Could not fetch AI response.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePause = () => {\n    if (intervalId) {\n      clearInterval(intervalId); // Stop the typing effect\n      setIntervalId(null); // Reset the interval ID\n    }\n    setIsPaused(true); // Update pause state\n  };\n  const handleResume = () => {\n    setIsPaused(false); // Reset pause state to false\n    startTypingEffect(response); // Resume typing effect from where it left off\n  };\n  useEffect(() => {\n    if (response && !isPaused) {\n      startTypingEffect(response);\n    }\n    // Clean up interval when the component is unmounted or a new response is received\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [response, isPaused]);\n  const startTypingEffect = responseText => {\n    let index = 0;\n    const id = setInterval(() => {\n      setDisplayedResponse(prev => prev + responseText[index]);\n      index++;\n      if (index >= responseText.length) clearInterval(id); // Stop when the message is fully displayed\n    }, 40); // Speed of typing (ms)\n    setIntervalId(id); // Store the interval ID so we can clear it later\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Type your prompt here...\",\n        value: prompt,\n        onChange: handlePromptChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendPrompt,\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 32\n        }, this) : 'Send Prompt'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), displayedResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-output\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"AI Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: displayedResponse\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: isPaused ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResume,\n          children: \"Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePause,\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatComponent, \"bnvvUDIV5bCGDMphcLKqEfJpLuc=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatComponent","_s","prompt","setPrompt","response","setResponse","loading","setLoading","displayedResponse","setDisplayedResponse","isPaused","setIsPaused","intervalId","setIntervalId","handlePromptChange","e","target","value","handleSendPrompt","trim","result","post","headers","console","log","data","JSON","parse","aiMessage","choices","message","content","cleanedResponse","replace","error","handlePause","clearInterval","handleResume","startTypingEffect","responseText","index","id","setInterval","prev","length","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/vamsh/OneDrive/Documents/New folder/prompt-box-frontend/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ChatComponent() {\r\n    const [prompt, setPrompt] = useState('');\r\n    const [response, setResponse] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [displayedResponse, setDisplayedResponse] = useState('');\r\n    const [isPaused, setIsPaused] = useState(false);  // State for pause functionality\r\n    const [intervalId, setIntervalId] = useState(null);  // State to store the interval ID\r\n\r\n    const handlePromptChange = (e) => {\r\n        setPrompt(e.target.value);\r\n    };\r\n\r\n    const handleSendPrompt = async () => {\r\n        if (!prompt.trim()) return;\r\n\r\n        setLoading(true);\r\n        setResponse('');\r\n        setDisplayedResponse('');\r\n        setIsPaused(false);  // Reset pause state when a new prompt is sent\r\n\r\n        try {\r\n            const result = await axios.post('http://localhost:9191/openai/chat', \r\n                { prompt }, // ✅ send as JSON\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            // Log the raw response to inspect it before processing\r\n            console.log(\"Raw AI Response:\", result.data);\r\n\r\n            const data = typeof result.data === \"string\" ? JSON.parse(result.data) : result.data;\r\n            const aiMessage = data.choices[0].message.content;\r\n\r\n            // Clean up the response (remove unnecessary newlines)\r\n            const cleanedResponse = aiMessage.trim().replace(/\\n+/g, ' ').replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');  // Handle newlines and bold text\r\n\r\n            console.log(\"Cleaned AI Response:\", cleanedResponse);  // Check after cleaning\r\n\r\n            setResponse(cleanedResponse);\r\n        } catch (error) {\r\n            console.error(\"Error fetching AI response:\", error);\r\n            setResponse(\"Error: Could not fetch AI response.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handlePause = () => {\r\n        if (intervalId) {\r\n            clearInterval(intervalId);  // Stop the typing effect\r\n            setIntervalId(null);  // Reset the interval ID\r\n        }\r\n        setIsPaused(true);  // Update pause state\r\n    };\r\n\r\n    const handleResume = () => {\r\n        setIsPaused(false);  // Reset pause state to false\r\n        startTypingEffect(response);  // Resume typing effect from where it left off\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (response && !isPaused) {\r\n            startTypingEffect(response);\r\n        }\r\n        // Clean up interval when the component is unmounted or a new response is received\r\n        return () => {\r\n            if (intervalId) clearInterval(intervalId);\r\n        };\r\n    }, [response, isPaused]);\r\n\r\n    const startTypingEffect = (responseText) => {\r\n        let index = 0;\r\n        const id = setInterval(() => {\r\n            setDisplayedResponse((prev) => prev + responseText[index]);\r\n            index++;\r\n            if (index >= responseText.length) clearInterval(id);  // Stop when the message is fully displayed\r\n        }, 40); // Speed of typing (ms)\r\n        setIntervalId(id);  // Store the interval ID so we can clear it later\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <textarea \r\n                    placeholder=\"Type your prompt here...\"\r\n                    value={prompt}\r\n                    onChange={handlePromptChange}\r\n                />\r\n                <button onClick={handleSendPrompt} disabled={loading}>\r\n                    {loading ? <div className=\"spinner\"></div> : 'Send Prompt'}\r\n                </button>\r\n\r\n                {/* Display Response */}\r\n                {displayedResponse && (\r\n                    <div className=\"card-output\">\r\n                        <h5>AI Response:</h5>\r\n                        <p dangerouslySetInnerHTML={{ __html: displayedResponse }}></p>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Pause and Resume Buttons */}\r\n                <div className=\"button-group\">\r\n                    {isPaused ? (\r\n                        <button onClick={handleResume}>Resume</button>\r\n                    ) : (\r\n                        <button onClick={handlePause}>Pause</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}